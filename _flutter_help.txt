MULTIPLE FOLDERS:
Get-ChildItem -Directory | foreach {cd $_.FullName ; rm -r -fo android; rm -r -fo windows ; rm -r -fo linux ; rm -r -fo web ; rm -r -fo macos ; rm -r -fo ios ; flutter create . --platforms=android,windows,linux,web,macos,ios ; Remove-Item test/widget_test.dart ; flutter pub upgrade --major-versions  --tighten ; flutter clean ; flutter pub get ; Get-ChildItem * -Include *.g.dart -Recurse | Remove-Item ; Get-ChildItem * -Include *.freezed.dart -Recurse | Remove-Item ; dart run build_runner build -d ; cd..}

Get-ChildItem -Directory | foreach {cd $_.FullName ; flutter analyze ; cd..}

SINGLE FOLDER:

rm -r -fo android; rm -r -fo windows ; rm -r -fo linux ; rm -r -fo web ; rm -r -fo macos ; rm -r -fo ios ; flutter create . --platforms=android,windows,linux,web,macos,ios ; Remove-Item test/widget_test.dart ; cd android ; ./gradlew wrapper --gradle-version 8.4 ; ./gradlew wrapper --version ; cd.. ; flutter pub upgrade --major-versions  --tighten ; flutter clean ; flutter pub get ; Get-ChildItem * -Include *.g.dart -Recurse | Remove-Item ; Get-ChildItem * -Include *.freezed.dart -Recurse | Remove-Item ; dart run build_runner build -d

dart run build_runner build -d

--------
RIVERPOD
--------
// import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:riverpod_annotation/riverpod_annotation.dart';

riverpodPart (Flutter Riverpod Snippets)

riverpodClass
riverpodAsyncClass (manually change to async)

riverpod (simple provider, an autodispose one)
String autoDisposeHello(AutoDisposeHelloRef ref) => 'Hello';
riverpodKeepAlive
String hello(HelloRef ref => 'Hello';
riverpodKeepAlive
String familyHello(FamilyHelloRef ref, String name) => return 'Hello $name';  // don't use name

riverpodFuture/riverpodStream

@Riverpod(keepAlive: true)
int cartItemsCount(Ref ref) {
  return ref.watch(cartProvider).maybeMap(
        data: (cart) => cart.value.items.length,
        orElse: () => 0,
      );
}

doc: guard and overrideWith
use if (_mounted) like in leave_review_controller.dart (video 161)
-------
FREEZED
-------
import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:flutter/foundation.dart';

ptf (part 'person.freezed.dart';)

fdataclass (@freezed DataClass) (const factory, no need to add final to fields)

funion (now sealed class)
@unfreezed (delete const, need to add final if needed to fields)
@Freezed(makeCollectionsUnmodifiable: false)

dart run build_runner watch -d
--------------
FREEZED + Json
--------------
import 'package:freezed_annotation/freezed_annotation.dart';
import 'package:flutter/foundation.dart';

ptf (part 'person.freezed.dart';)
pts (part 'person.g.dart';)
fromJson // this is actually from freezed?

fdataclass (@freezed DataClass) (const factory, no need to add final to fields)

@JsonSerializable(explicitToJson: true)

In list of parameters:
@JsonKey(name: 'parking_lot_capacity') int? parkingLotCapacity (to use camel case)
@Default([]) List<Review> reviews (normally factory doesn't allow def value?)
---------------------
Riverpod+Freezed INIT
---------------------
equatable package?
flutter pub add flutter_riverpod
flutter pub add riverpod_annotation
flutter pub add dev:custom_lint
flutter pub add dev:riverpod_generator
flutter pub add dev:riverpod_lint
flutter pub add freezed_annotation
flutter pub add dev:freezed
flutter pub add dev:build_runner
	
analysis_options.yaml
linter:
  rules:
    avoid_print: false
analyzer:
  plugins:
    - custom_lint
  exclude:
    - '**/*.freezed.dart'
    - '**/*.g.dart'

dart run build_runner watch -d
---------------------
Riverpod+Freezed+Json INIT
---------------------
flutter pub add flutter_riverpod
flutter pub add riverpod_annotation
flutter pub add dev:custom_lint
flutter pub add dev:riverpod_generator
flutter pub add dev:riverpod_lint
flutter pub add freezed_annotation
flutter pub add dev:freezed
flutter pub add json_annotation
flutter pub add dev:json_serializable
flutter pub add dev:build_runner

analysis_options.yaml
linter:
  rules:
    avoid_print: false
analyzer:
  errors:
    invalid_annotation_target: ignore // only for json_serializable
  plugins:
    - custom_lint
  exclude:
    - '**/*.freezed.dart'
    - '**/*.g.dart'
	
dart run build_runner build --delete-conflicting-outputs
dart run build_runner build -d (this is same as the one above)
dart run build_runner watch -d
-------------
Riverpod INIT
-------------
flutter pub add flutter_riverpod
flutter pub add riverpod_annotation
flutter pub add dev:custom_lint
flutter pub add dev:riverpod_generator
flutter pub add dev:riverpod_lint
flutter pub add dev:build_runner
dependencies:
	flutter_riverpod
	riverpod_annotation
dev:
	build_runner
	custom_lint
	riverpod_generator
	riverpod_lint
	
analysis_options.yaml
linter:
  rules:
    avoid_print: false
analyzer:
  plugins:
    - custom_lint
  exclude:
    - '**/*.g.dart'
	
dart run build_runner watch -d

--------------
INITIALIZATION
--------------
pub: Shimmer (if you don't want multiple loading indicators? flutter foundations video44), RxDart
vscode ext: Dart Data Class Generator (copyWith, toString, equality etc. - vscode settings: use Equatable)

flutter create // --template=module/package/plugin/skeleton --platforms=web,android,ios
flutter run
flutter packages get

flutter pub add/remove [package]
flutter clean ; flutter pub get
flutter pub get
flutter pub upgrade --major-versions  --tighten ; flutter clean ; flutter pub get ; code .

Get-ChildItem -Directory | foreach {cd $_.FullName ; rm -r -fo android; rm -r -fo windows ; rm -r -fo linux ; rm -r -fo web ; rm -r -fo macos ; rm -r -fo ios ; flutter create . --platforms=android,windows,linux,web,macos,ios ; Remove-Item test/widget_test.dart ; flutter pub upgrade --major-versions  --tighten ; flutter clean ; flutter pub get ; Get-ChildItem * -Include *.g.dart -Recurse | Remove-Item ; Get-ChildItem * -Include *.freezed.dart -Recurse | Remove-Item ; dart run build_runner build -d ; cd..}

Get-ChildItem -Directory | foreach {cd $_.FullName ; flutter analyze ; cd..}
flutter pub pub cache repair

cd android
./gradlew --refresh-dependencies

adb tcpip 5555
adb shell ip -f inet addr show wlan0
adb connect 192.168.0.103
adb usb

flutter:
 uses-material-design: true
 assets:
 - assets/images/  // Image.asset('images/green-tile.png')
 - assets/example.json // use AssetBundle object
 
dependencies:
  flutter:
    sdk: flutter
  flutter_web_plugins:  // https://docs.flutter.dev/ui/navigation/url-strategies
    sdk: flutter

debugShowMaterialGrid: false,
debugShowCheckedModeBanner: false

------
OTHERS
------
SingleChildScrollView to prevent Overflow error (?)
RichText>>TextSpan

cloc --by-file .

------------------
PLATFORMS SPECIFIC
------------------
import 'dart:io' show Platform;
import 'package:flutter/foundation.dart' show kIsWeb;

bool get isMobileDevice => !kIsWeb && (Platform.isIOS || Platform.isAndroid);
bool get isDesktopDevice => !kIsWeb && (Platform.isMacOS || Platform.isWindows || Platform.isLinux);
bool get isMobileDeviceOrWeb => kIsWeb || isMobileDevice;
bool get isDesktopDeviceOrWeb => kIsWeb || isDesktopDevice;
bool get isAndroid => !kIsWeb && Platform.isAndroid;
bool get isFuchsia => !kIsWeb && Platform.isFuchsia;
bool get isIOS => !kIsWeb && Platform.isIOS;
bool get isLinux => !kIsWeb && Platform.isLinux;
bool get isMacOS => !kIsWeb && Platform.isMacOS;
bool get isWindows => !kIsWeb && Platform.isWindows;

---------
FIREBASE
--------
firebase --version
flutterfire --version
firebase login:list (firebase login)

flutterfire configure

flutter pub add firebase_core
flutter pub add firebase_auth
flutter pub add cloud_firestore
flutterfire configure

import 'package:firebase_core/firebase_core.dart';
import 'firebase_options.dart';

await Firebase.initializeApp(
  options: DefaultFirebaseOptions.currentPlatform,
);

------------------
FLUTTER APPRENTICE
------------------
107: final textTheme = Theme.of(context).textTheme.apply(displayColor:Theme.of(context).colorScheme.onSurface);
IndexedStack with Bottomnav:
      body: IndexedStack(
        index: tab,
        children: pages,
      ),
      bottomNavigationBar: NavigationBar(
        selectedIndex: tab,
        onDestinationSelected: (index) {
          setState(() {
            tab = index;
          });
        },
        destinations: appBarDestinations, // List<NavigationDestination> (icon/label/selecctedIcon)
      ),
	  
Listview shrinkWrap, primary, NeverScrollableScrollPhysics
CustomScrollView: eg collapse your navigation header on scroll
PageView: scrolls page by page
SliverAppBar (flexiblespace: FlexibleSpaceBar(background: Center(child: Stack)))
SliverToBoxAdapter
GridView.builder (gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(crossAxisCount: columns))
Stack (fit: StackFit.expand)
flutter_secure_storage plugin instead of shared prefs

------------
URL STRATEGY
------------
  flutter_web_plugins:
    sdk: flutter

import 'package:flutter_web_plugins/url_strategy.dart';
 
void main() {
  usePathUrlStrategy();
  runApp(ExampleApp());
}

------
ref.on
------
void printInfo(Ref ref, String providerName) {
  print('$providerName initialized');
  ref.onAddListener(() {
    print('$providerName listener added');
  });
  ref.onCancel(() {
    print('$providerName canceled');
  });
  ref.onResume(() {
    print('$providerName resumed');
  });
  ref.onRemoveListener(() {
    print('$providerName listener removed');
  });
  ref.onDispose(() {
    print('$providerName disposed');
  });
}

------
Chrome
------
Remove C:\flutter\bin\cache\flutter_tools.stamp
C:\flutter\packages\flutter_tools\lib\src\web\chrome.dart
Under '--disable-extensions' add:
'--disable-web-security',

------
GRADLE
------
flutter config --jdk-dir='C:\Program Files\Android\Android Studio\jbr'
(so Flutter will use Android Studio's built-in JDK which is probably the best solution even if it's not the latest JDK)

Java version check: flutter doctor --v
https://docs.gradle.org/current/userguide/compatibility.html#java
<PROJECT>/android/gradle/wrapper/gradle-wrapper.properties

In cmd <PROJECT>/android/ folder:
./gradlew --version
./gradlew wrapper --gradle-version 8.4

-------------------
DEFENDER EXCEPTIONS
-------------------
Programming Folder/Android/Vscode/Flutter/Java
C:\Users\urban\.gradle
C:\Users\urban\AppData\Local\Android\Sdk
C:\Users\urban\AppData\Local\Google\AndroidStudio

-------
TESTING
-------
flutter pub add dev:mocktail

Github Actions (video90): https://blog.gskinner.com/archives/2022/01/flutter-easily-add-ci-testing-with-github-actions.html
final isFake = String.fromEnvironment('useFakeRepos') == 'true';
Run the app with: --dart-define=useFakeRepos=true

flutte test --coverage
gitignore: coverage/lcov.info
Flutter Coverage
Coverage Gutteres

UNIT TESTS:
expect/expectLater (emits/emitsInOrder)

when thenReturn(object) / thenAnswer(future,stream) / thenThrow(exception)
verify().called(1)
verifyNever()

timeout: const Timeout(Duration(milliseconds: 500)) or first line: @Timeout(Duration(milliseconds: 500))

WIDGET TESTS:
find.text() / find.byType() / find.byKey()
.evaluate();
findsOneWidget/findsNWidgets(kTestProduts.length))

await tester.pushWidget();
await tester.enterText(emailField, email);

const kDialogDefaultKey = Key('dialog-default-key');
find.byKey(kDialogDefaultKey);
Or inside a class:
static const emailKey = Key('email');
find.byKey(ClassName.emailKey);

when Future.delayed() => Wrap your code with await tester.runAsync(() async {
)}

INTEGRATION TESTS:
dev_dependencies:
  integration_test:
    sdk: flutter  

await tester.pumpAndSettle();

  Future<void> openPopupMenu() async {
    final finder = find.byType(MoreMenuButton);
    final matches = finder.evaluate();
    // if an item is found, it means that we're running
    // on a small window and can tap to reveal the menu
    if (matches.isNotEmpty) {
      await tester.tap(finder);
      await tester.pumpAndSettle();
    }
    // else no-op, as the items are already visible
  }
  
GOLDEN IMAGE TESTS:
  fonts:
    # Used for Golden Image tests
    - family: Roboto
      fonts:
        - asset: assets/fonts/Roboto-Regular.ttf

golden_robot.dart

flutter test --update-goldens --tags=golden (if you use tags, add them to dart_test.yaml)
.gitignore:
# don't check in golden failure output
**/failures/*.png